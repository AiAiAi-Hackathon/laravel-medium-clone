version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel_app
        restart: unless-stopped
        volumes:
            - .:/var/www
        ports:
            - "9000:9000"
        networks:
            - laravel
        environment:
            - MINIO_ACCESS_KEY=minioadmin
            - MINIO_SECRET_KEY=minioadmin
            - MINIO_ENDPOINT=http://minio:9000
            - MINIO_BUCKET=laravel-media

    web:
        image: nginx:alpine
        container_name: nginx_web
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - .:/var/www
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
        depends_on:
            - app
        networks:
            - laravel

    mailpit:
        image: axllent/mailpit:latest
        container_name: mailpit
        restart: unless-stopped
        ports:
            - "2525:1025"  # SMTP port
            - "8025:8025"  # Web UI port
        networks:
            - laravel

    minio:
        image: minio/minio
        container_name: minio
        restart: unless-stopped
        ports:
            - "9001:9000"  # API port
            - "9090:9090"  # Console port
        volumes:
            - minio_data:/data
        environment:
            - MINIO_ROOT_USER=minioadmin
            - MINIO_ROOT_PASSWORD=minioadmin
        command: server /data --console-address ":9090"
        networks:
            - laravel

    createbuckets:
        image: minio/mc
        container_name: createbuckets
        depends_on:
            - minio
        restart: on-failure
        entrypoint: >
            /bin/sh -c "
            sleep 10;
            /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
            /usr/bin/mc mb myminio/laravel-media;
            /usr/bin/mc policy set public myminio/laravel-media;
            exit 0;
            "
        networks:
            - laravel

networks:
    laravel:
        driver: bridge

volumes:
    minio_data:
